"""climmobShare - Registry - table relationship

Revision ID: 8cf1a94a5e87
Revises: 2b689d7b5f1d
Create Date: 2021-08-10 10:15:47.060857

"""
import sqlalchemy as sa
from sqlalchemy.orm.session import Session

from alembic import op

# revision identifiers, used by Alembic.
revision = "8cf1a94a5e87"
down_revision = "2b689d7b5f1d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("PRIMARY", "registry", type_="primary")
    op.create_primary_key("pk_registry", "registry", ["project_id", "question_id"])

    op.add_column(
        "registry",
        sa.Column("section_project_id", sa.Unicode(length=64), nullable=True),
    )

    session = Session(bind=op.get_bind())
    try:
        projects = session.execute("Select * from project")
        for project in projects:
            session.execute(
                "UPDATE registry SET section_project_id = '"
                + project.project_id
                + "' WHERE (project_id = '"
                + project.project_id
                + "') "
            )
    except Exception as e:
        print(str(e))
        exit(1)

    session.commit()

    op.create_index(
        "fk_registry_regsection1_idx",
        "registry",
        ["section_project_id", "section_id"],
        unique=False,
    )
    op.create_foreign_key(
        op.f("fk_registry_project_id_project"),
        "registry",
        "project",
        ["project_id"],
        ["project_id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("fk_registry_question_id_question"),
        "registry",
        "question",
        ["question_id"],
        ["question_id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("fk_registry_section_project_id_regsection"),
        "registry",
        "regsection",
        ["section_project_id", "section_id"],
        ["project_id", "section_id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("PRIMARY", "registry", type_="primary")
    op.create_primary_key(
        "pk_registry", "registry", ["user_name", "project_cod", "question_id"]
    )

    op.drop_constraint(
        op.f("fk_registry_section_project_id_regsection"),
        "registry",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_registry_question_id_question"), "registry", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_registry_project_id_project"), "registry", type_="foreignkey"
    )
    op.drop_index("fk_registry_regsection1_idx", table_name="registry")
    op.drop_column("registry", "section_project_id")
    # ### end Alembic commands ###
