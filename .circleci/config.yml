version: 2
jobs:
  build_master: &build-template
    docker:
      - image: mrbotcr/climmob_base
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
      - image: mysql:8.0.23
        command: "--default-authentication-plugin=mysql_native_password"
        cap_add:
          - SYS_NICE
        environment:
          - MYSQL_ROOT_PASSWORD=circleci
        ports:
          - 3306:3306
    working_directory: ~/work
    steps:
      - checkout
      - run: | # We will just build master-2.0 branch
          if [ $CIRCLE_BRANCH != 'master' ]; then
            exit 1
          fi
      - restore_cache:
          key: requirements-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "requirements.txt" }}
      - run:
          name: Run servers
          command: |
            sudo /etc/init.d/redis-server start
            tail -f /dev/null
          background: true
      - run:
          # Install dependencies with --user to enable easier caching
          name: Install dependencies
          command: |
            pip install -r requirements.txt --user
            pip install codecov --user
            /home/circleci/.local/bin/codecov
            mysql -h 127.0.0.1 -u root --ssl-mode=DISABLED --password=circleci --execute='CREATE SCHEMA IF NOT EXISTS climmobv4'
            mysql -h 127.0.0.1 -u root --ssl-mode=DISABLED --password=circleci climmobv4 < ./docker_files/climmob/docker_files/base_db.sql
            python3 create_config.py --daemon --capture_output --mysql_host 127.0.0.1 --mysql_user_name root --mysql_user_password circleci --repository_path /opt/climmob_repository --odktools_path /opt/odktools --climmob_host localhost --climmob_port 5900 --forwarded_allow_ip localhost --pid_file /opt/climmob_gunicorn/climmob.pid --error_log_file /opt/climmob_log/error_log /opt/climmob_config/development.ini
            ln -s /opt/climmob_config/development.ini ./development.ini
            python3 configure_celery.py ./development.ini
            python3 download_nltk_packages.py
            python3 setup.py install --user
            python3 setup.py compile_catalog
            /home/circleci/.local/bin/disable_ssl ./development.ini
            /home/circleci/.local/bin/configure_alembic ./development.ini .
            /home/circleci/.local/bin/configure_mysql ./development.ini .
            /home/circleci/.local/bin/configure_tests ./development.ini .
            /home/circleci/.local/bin/alembic upgrade head
      - run:
          name: Test code is well formatted
          command: |
            /home/circleci/.local/bin/black --version
            /home/circleci/.local/bin/black climmob --check || exit;
      - run:
          name: Run Celery in the background
          command: |
            export COLUMNS=80
            export CLIMMOB_PYTEST_RUNNING=true
            /home/circleci/.local/bin/celery -A climmob.config.celery_app worker --loglevel=info -Q ClimMob
          background: true
      - run:
          name: Run tests
          command: |
            export CLIMMOB_PYTEST_RUNNING=true
            /home/circleci/.local/bin/pytest -s --cov=climmob
      - run:
          name: upload coverage report
          command: |
            /home/circleci/.local/bin/coverage xml
            (/home/circleci/.local/bin/codecov --required -X search gcov pycov -f coverage.xml) || echo 'Codecov failed to upload'
      - run:
          name: Building artifacts
          command: |
            python3 setup.py sdist
            python3 setup.py bdist_wheel
      - store_artifacts:
          path: dist/
          destination: ./
      - save_cache:
          key: requirements-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "requirements.txt" }}
          paths:
            - /home/circleci/.local/lib
            - /home/circleci/.local/bin

  build_develop: &build-template
    docker:
      - image: mrbotcr/climmob_base
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
      - image: mysql:8.0.23
        command: "--default-authentication-plugin=mysql_native_password"
        cap_add:
          - SYS_NICE
        environment:
          - MYSQL_ROOT_PASSWORD=circleci
        ports:
          - 3306:3306
    working_directory: ~/work
    steps:
      - checkout
      - run: | # We will just build master-2.0 branch
          if [ $CIRCLE_BRANCH != 'master' ]; then
            exit 1
          fi
      - restore_cache:
          key: requirements-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "requirements.txt" }}
      - run:
          name: Run servers
          command: |
            sudo /etc/init.d/redis-server start
            tail -f /dev/null
          background: true
      - run:
          # Install dependencies with --user to enable easier caching
          name: Install dependencies
          command: |
            pip install -r requirements.txt --user
            pip install codecov --user
            /home/circleci/.local/bin/codecov
            mysql -h 127.0.0.1 -u root --ssl-mode=DISABLED --password=circleci --execute='CREATE SCHEMA IF NOT EXISTS climmobv4'
            mysql -h 127.0.0.1 -u root --ssl-mode=DISABLED --password=circleci climmobv4 < ./docker_files/climmob/docker_files/base_db.sql
            python3 create_config.py --daemon --capture_output --mysql_host 127.0.0.1 --mysql_user_name root --mysql_user_password circleci --repository_path /opt/climmob_repository --odktools_path /opt/odktools --climmob_host localhost --climmob_port 5900 --forwarded_allow_ip localhost --pid_file /opt/climmob_gunicorn/climmob.pid --error_log_file /opt/climmob_log/error_log /opt/climmob_config/development.ini
            ln -s /opt/climmob_config/development.ini ./development.ini
            python3 configure_celery.py ./development.ini
            python3 download_nltk_packages.py
            python3 setup.py install --user
            python3 setup.py compile_catalog
            /home/circleci/.local/bin/disable_ssl ./development.ini
            /home/circleci/.local/bin/configure_alembic ./development.ini .
            /home/circleci/.local/bin/configure_mysql ./development.ini .
            /home/circleci/.local/bin/configure_tests ./development.ini .
            /home/circleci/.local/bin/alembic upgrade head
      - run:
          name: Test code is well formatted
          command: |
            /home/circleci/.local/bin/black --version
            /home/circleci/.local/bin/black climmob --check || exit;
#      - run:
#          name: Run Celery in the background
#          command: |
#            export COLUMNS=80
#            export CLIMMOB_PYTEST_RUNNING=true
#            /home/circleci/.local/bin/celery -A climmob.config.celery_app worker --loglevel=info -Q ClimMob
#          background: true
#      - run:
#          name: Run tests
#          command: |
#            export CLIMMOB_PYTEST_RUNNING=true
#            /home/circleci/.local/bin/pytest -s --cov=climmob
#      - run:
#          name: upload coverage report
#          command: |
#            /home/circleci/.local/bin/coverage xml
#            (/home/circleci/.local/bin/codecov --required -X search gcov pycov -f coverage.xml) || echo 'Codecov failed to upload'
#      - run:
#          name: Building artifacts
#          command: |
#            python3 setup.py sdist
#            python3 setup.py bdist_wheel
#      - store_artifacts:
#          path: dist/
#          destination: ./
#      - save_cache:
#          key: requirements-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "requirements.txt" }}
#          paths:
#            - /home/circleci/.local/lib
#            - /home/circleci/.local/bin



workflows:
  version: 2
  build:
    jobs:
      - build_master:
          filters:
            branches:
              only:
                - master

      - build_develop:
          filters:
            branches:
              only:
                - develop